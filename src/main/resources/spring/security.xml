<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:beans="http://www.springframework.org/schema/beans" 
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    
    <http auto-config="true" use-expressions="true">
        
        <intercept-url pattern="/login" access="permitAll" />
        <intercept-url pattern="/logout" access="permitAll"/>
        <intercept-url pattern="/loginfailed" access="permitAll"/>
       
        <intercept-url pattern="/" access="hasRole('ROLE_USUARIO')"/>
        <intercept-url pattern="/index" access="hasRole('ROLE_USUARIO')"/>
        
        <form-login login-page="/login" default-target-url="/" authentication-failure-url="/loginfailed" />
        <logout logout-url="/logout" logout-success-url="/" invalidate-session="true" />
        
    </http>
    
    
    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="select usuario, password, true from usuarios where usuario = ?"
                               authorities-by-username-query="select u.usuario, r.role from usuarios u, usuarios_roles r where u.id = r.usuario_id and u.usuario = ?"  />
        </authentication-provider>
    </authentication-manager>
    
</beans:beans>
